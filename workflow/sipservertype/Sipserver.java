package sipservertype;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 3.0.3
 * 2016-06-29T14:20:58.648+08:00
 * Generated source version: 3.0.3
 * 
 */
@WebServiceClient(name = "sipserver", 
                  wsdlLocation = "http://localhost:5999/?sipserver2.wsdl",
                  targetNamespace = "urn:sipserverType") 
public class Sipserver extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("urn:sipserverType", "sipserver");
    public final static QName Sipserver = new QName("urn:sipserverType", "sipserver");
    static {
        URL url = null;
        try {
            url = new URL("http://localhost:5999/?sipserver2.wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(Sipserver.class.getName())
                .log(java.util.logging.Level.INFO, 
                     "Can not initialize the default wsdl from {0}", "http://localhost:5999/?sipserver2.wsdl");
        }
        WSDL_LOCATION = url;
    }

    public Sipserver(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public Sipserver(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public Sipserver() {
        super(WSDL_LOCATION, SERVICE);
    }
    

    /**
     *
     * @return
     *     returns SipserverPortType
     */
    @WebEndpoint(name = "sipserver")
    public SipserverPortType getSipserver() {
        return super.getPort(Sipserver, SipserverPortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns SipserverPortType
     */
    @WebEndpoint(name = "sipserver")
    public SipserverPortType getSipserver(WebServiceFeature... features) {
        return super.getPort(Sipserver, SipserverPortType.class, features);
    }

}
