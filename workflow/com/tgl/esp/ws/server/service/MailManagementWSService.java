package com.tgl.esp.ws.server.service;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 3.0.3
 * 2017-04-19T18:47:15.224+08:00
 * Generated source version: 3.0.3
 * 
 */
@WebServiceClient(name = "MailManagementWSService", 
                  wsdlLocation = "file:/c:/sip/cfg/esp.xml",
                  targetNamespace = "http://service.server.ws.esp.tgl.com/") 
public class MailManagementWSService extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://service.server.ws.esp.tgl.com/", "MailManagementWSService");
    public final static QName MailManagementWSPort = new QName("http://service.server.ws.esp.tgl.com/", "MailManagementWSPort");
    static {
        URL url = null;
        try {
            url = new URL("file:/c:/sip/cfg/esp.xml");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(MailManagementWSService.class.getName())
                .log(java.util.logging.Level.INFO, 
                     "Can not initialize the default wsdl from {0}", "file:/c:/sip/cfg/esp.xml");
        }
        WSDL_LOCATION = url;
    }

    public MailManagementWSService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public MailManagementWSService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public MailManagementWSService() {
        super(WSDL_LOCATION, SERVICE);
    }
    

    /**
     *
     * @return
     *     returns MailManagementWS
     */
    @WebEndpoint(name = "MailManagementWSPort")
    public MailManagementWS getMailManagementWSPort() {
        return super.getPort(MailManagementWSPort, MailManagementWS.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns MailManagementWS
     */
    @WebEndpoint(name = "MailManagementWSPort")
    public MailManagementWS getMailManagementWSPort(WebServiceFeature... features) {
        return super.getPort(MailManagementWSPort, MailManagementWS.class, features);
    }

}
